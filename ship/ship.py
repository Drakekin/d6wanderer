DRIVE_LETTERS = [
    'A', 'B', 'C', 'D', 'E', 'F',
    'G', 'H', 'J', 'K', 'L', 'M',
    'N', 'P', 'Q', 'R', 'S', 'T',
    'U', 'V', 'W', 'X', 'Y', 'Z',
]
DRIVE_EFFICIENCY_TABLE = {
    "A": (2, 1, 0, 0, 0, 0, 0, 0, 0, 0),
    "B": (4, 2, 1, 0, 0, 0, 0, 0, 0, 0),
    "C": (6, 3, 1, 1, 0, 0, 0, 0, 0, 0),
    "D": (0, 4, 2, 1, 1, 0, 0, 0, 0, 0),
    "E": (0, 5, 2, 1, 1, 1, 0, 0, 0, 0),
    "F": (0, 6, 3, 2, 1, 1, 0, 0, 0, 0),
    "G": (0, 0, 3, 2, 1, 1, 0, 0, 0, 0),
    "H": (0, 0, 4, 2, 2, 1, 0, 0, 0, 0),
    "J": (0, 0, 5, 3, 2, 2, 1, 0, 0, 0),
    "K": (0, 0, 5, 3, 2, 2, 1, 0, 0, 0),
    "L": (0, 0, 6, 4, 3, 2, 1, 0, 0, 0),
    "M": (0, 0, 6, 4, 3, 2, 1, 0, 0, 0),
    "N": (0, 0, 0, 4, 3, 2, 1, 0, 0, 0),
    "P": (0, 0, 0, 5, 3, 3, 1, 1, 0, 0),
    "Q": (0, 0, 0, 5, 4, 3, 1, 1, 0, 0),
    "R": (0, 0, 0, 5, 4, 3, 1, 1, 0, 0),
    "S": (0, 0, 0, 5, 4, 3, 1, 1, 0, 0),
    "T": (0, 0, 0, 6, 4, 3, 1, 1, 0, 0),
    "U": (0, 0, 0, 6, 4, 3, 1, 1, 0, 0),
    "V": (0, 0, 0, 6, 5, 4, 2, 1, 1, 0),
    "W": (0, 0, 0, 0, 5, 5, 2, 1, 1, 1),
    "X": (0, 0, 0, 0, 6, 6, 3, 2, 1, 1),
    "Y": (0, 0, 0, 0, 6, 6, 4, 2, 2, 1),
    "Z": (0, 0, 0, 0, 6, 6, 6, 4, 3, 2),
}
JUMP_DRIVE_COSTS = {
    "A": (10, 10),
    "B": (15, 20),
    "C": (20, 30),
    "D": (25, 40),
    "E": (30, 50),
    "F": (35, 60),
    "G": (40, 70),
    "H": (45, 80),
    "J": (50, 90),
    "K": (55, 100),
    "L": (60, 110),
    "M": (65, 120),
    "N": (70, 130),
    "P": (75, 140),
    "Q": (80, 150),
    "R": (85, 160),
    "S": (90, 170),
    "T": (95, 180),
    "U": (100, 190),
    "V": (105, 200),
    "W": (110, 210),
    "X": (115, 220),
    "Y": (120, 230),
    "Z": (125, 240),
}
MANEUVER_DRIVE_COSTS = {
    "A": (1, 4),
    "B": (3, 8),
    "C": (5, 12),
    "D": (7, 16),
    "E": (9, 20),
    "F": (11, 24),
    "G": (13, 28),
    "H": (15, 32),
    "J": (17, 36),
    "K": (19, 40),
    "L": (21, 44),
    "M": (23, 48),
    "N": (25, 52),
    "P": (27, 56),
    "Q": (29, 60),
    "R": (31, 64),
    "S": (33, 68),
    "T": (35, 72),
    "U": (37, 76),
    "V": (39, 80),
    "W": (41, 84),
    "X": (43, 88),
    "Y": (45, 92),
    "Z": (47, 96),
}
POWER_PLANT_COST = {
    "A": (4, 8),
    "B": (7, 16),
    "C": (10, 24),
    "D": (13, 32),
    "E": (16, 40),
    "F": (19, 48),
    "G": (22, 56),
    "H": (25, 64),
    "J": (28, 72),
    "K": (31, 80),
    "L": (34, 88),
    "M": (37, 96),
    "N": (40, 104),
    "P": (43, 112),
    "Q": (46, 120),
    "R": (49, 128),
    "S": (52, 136),
    "T": (55, 144),
    "U": (58, 152),
    "V": (61, 160),
    "W": (64, 168),
    "X": (67, 176),
    "Y": (70, 184),
    "Z": (73, 192),
}
HULL_BUILD_TIME = [10, 12, 16, 24, 28, 30, 32, 34, 35, 36]
TONNAGE_BANDS = [100, 200, 400, 600, 800, 1000, 2000, 3000, 4000, 5000]
STANDARD_HULLS = [
    (85, 15, 2, 9),
    (185, 15, 8, 11),
    (350, 50, 16, 14),
    (515, 85, 48, 22),
    (635, 165, 80, 25),
    (835, 165, 100, 27),
]


def get_size_band(tonnage):
    for n, t in enumerate(TONNAGE_BANDS):
        if t > tonnage:

            return n


def build_ship(tonnage, acceleration, jump_number):
    cost = 0
    build_time = 0
    size_band = get_size_band(tonnage)

    build_time += HULL_BUILD_TIME[size_band]
    cost += min(tonnage * 0.1, 20)
    tonnage_used = tonnage * 0.2

    plant = ord("A")
    maneuver = "N/A"
    jump = "N/A"

    if acceleration:
        for letter, thrust in DRIVE_EFFICIENCY_TABLE.items():
            if thrust[size_band] > acceleration:
                plant = max(plant, ord(letter))
                maneuver = letter
                cost += MANEUVER_DRIVE_COSTS[letter]

    for letter, thrust in DRIVE_EFFICIENCY_TABLE.items():
        if thrust[size_band] > jump_number:
            plant = max(plant, ord(letter))
            jump = letter
            cost += JUMP_DRIVE_COSTS[letter]

